// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: etcdserver/etcdserverpb/rpc.proto

package etcdserverpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RangeRequest_SortOrder int32

const (
	RangeRequest_NONE    RangeRequest_SortOrder = 0
	RangeRequest_ASCEND  RangeRequest_SortOrder = 1
	RangeRequest_DESCEND RangeRequest_SortOrder = 2
)

var RangeRequest_SortOrder_name = map[int32]string{
	0: "NONE",
	1: "ASCEND",
	2: "DESCEND",
}

var RangeRequest_SortOrder_value = map[string]int32{
	"NONE":    0,
	"ASCEND":  1,
	"DESCEND": 2,
}

func (x RangeRequest_SortOrder) String() string {
	return proto.EnumName(RangeRequest_SortOrder_name, int32(x))
}

func (RangeRequest_SortOrder) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f6edb5021125cded, []int{0, 0}
}

type RangeRequest_SortTarget int32

const (
	RangeRequest_KEY     RangeRequest_SortTarget = 0
	RangeRequest_VERSION RangeRequest_SortTarget = 1
	RangeRequest_CREATE  RangeRequest_SortTarget = 2
	RangeRequest_MOD     RangeRequest_SortTarget = 3
	RangeRequest_VALUE   RangeRequest_SortTarget = 4
)

var RangeRequest_SortTarget_name = map[int32]string{
	0: "KEY",
	1: "VERSION",
	2: "CREATE",
	3: "MOD",
	4: "VALUE",
}

var RangeRequest_SortTarget_value = map[string]int32{
	"KEY":     0,
	"VERSION": 1,
	"CREATE":  2,
	"MOD":     3,
	"VALUE":   4,
}

func (x RangeRequest_SortTarget) String() string {
	return proto.EnumName(RangeRequest_SortTarget_name, int32(x))
}

func (RangeRequest_SortTarget) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f6edb5021125cded, []int{0, 1}
}

type RangeRequest struct {
	// key is the first key for the range. If range_end is not given, the request only looks up key.
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// range_end is the upper bound on the requested range [key, range_end).
	// If range_end is '\0', the range is all keys >= key.
	// If range_end is key plus one (e.g., "aa"+1 == "ab", "a\xff"+1 == "b"),
	// then the range request gets all keys prefixed with key.
	// If both key and range_end are '\0', then the range request returns all keys.
	RangeEnd []byte `protobuf:"bytes,2,opt,name=range_end,json=rangeEnd,proto3" json:"range_end,omitempty"`
	// limit is a limit on the number of keys returned for the request. When limit is set to 0,
	// it is treated as no limit.
	Limit int64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// revision is the point-in-time of the key-value store to use for the range.
	// If revision is less or equal to zero, the range is over the newest key-value store.
	// If the revision has been compacted, ErrCompacted is returned as a response.
	Revision int64 `protobuf:"varint,4,opt,name=revision,proto3" json:"revision,omitempty"`
	// sort_order is the order for returned sorted results.
	SortOrder RangeRequest_SortOrder `protobuf:"varint,5,opt,name=sort_order,json=sortOrder,proto3,enum=etcdserverpb.RangeRequest_SortOrder" json:"sort_order,omitempty"`
	// sort_target is the key-value field to use for sorting.
	SortTarget RangeRequest_SortTarget `protobuf:"varint,6,opt,name=sort_target,json=sortTarget,proto3,enum=etcdserverpb.RangeRequest_SortTarget" json:"sort_target,omitempty"`
	// serializable sets the range request to use serializable member-local reads.
	// Range requests are linearizable by default; linearizable requests have higher
	// latency and lower throughput than serializable requests but reflect the current
	// consensus of the cluster. For better performance, in exchange for possible stale reads,
	// a serializable range request is served locally without needing to reach consensus
	// with other nodes in the cluster.
	Serializable bool `protobuf:"varint,7,opt,name=serializable,proto3" json:"serializable,omitempty"`
	// keys_only when set returns only the keys and not the values.
	KeysOnly bool `protobuf:"varint,8,opt,name=keys_only,json=keysOnly,proto3" json:"keys_only,omitempty"`
	// count_only when set returns only the count of the keys in the range.
	CountOnly bool `protobuf:"varint,9,opt,name=count_only,json=countOnly,proto3" json:"count_only,omitempty"`
	// min_mod_revision is the lower bound for returned key mod revisions; all keys with
	// lesser mod revisions will be filtered away.
	MinModRevision int64 `protobuf:"varint,10,opt,name=min_mod_revision,json=minModRevision,proto3" json:"min_mod_revision,omitempty"`
	// max_mod_revision is the upper bound for returned key mod revisions; all keys with
	// greater mod revisions will be filtered away.
	MaxModRevision int64 `protobuf:"varint,11,opt,name=max_mod_revision,json=maxModRevision,proto3" json:"max_mod_revision,omitempty"`
	// min_create_revision is the lower bound for returned key create revisions; all keys with
	// lesser create revisions will be filtered away.
	MinCreateRevision int64 `protobuf:"varint,12,opt,name=min_create_revision,json=minCreateRevision,proto3" json:"min_create_revision,omitempty"`
	// max_create_revision is the upper bound for returned key create revisions; all keys with
	// greater create revisions will be filtered away.
	MaxCreateRevision    int64    `protobuf:"varint,13,opt,name=max_create_revision,json=maxCreateRevision,proto3" json:"max_create_revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RangeRequest) Reset()         { *m = RangeRequest{} }
func (m *RangeRequest) String() string { return proto.CompactTextString(m) }
func (*RangeRequest) ProtoMessage()    {}
func (*RangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6edb5021125cded, []int{0}
}
func (m *RangeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeRequest.Unmarshal(m, b)
}
func (m *RangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeRequest.Marshal(b, m, deterministic)
}
func (m *RangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeRequest.Merge(m, src)
}
func (m *RangeRequest) XXX_Size() int {
	return xxx_messageInfo_RangeRequest.Size(m)
}
func (m *RangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RangeRequest proto.InternalMessageInfo

func (m *RangeRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *RangeRequest) GetRangeEnd() []byte {
	if m != nil {
		return m.RangeEnd
	}
	return nil
}

func (m *RangeRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *RangeRequest) GetRevision() int64 {
	if m != nil {
		return m.Revision
	}
	return 0
}

func (m *RangeRequest) GetSortOrder() RangeRequest_SortOrder {
	if m != nil {
		return m.SortOrder
	}
	return RangeRequest_NONE
}

func (m *RangeRequest) GetSortTarget() RangeRequest_SortTarget {
	if m != nil {
		return m.SortTarget
	}
	return RangeRequest_KEY
}

func (m *RangeRequest) GetSerializable() bool {
	if m != nil {
		return m.Serializable
	}
	return false
}

func (m *RangeRequest) GetKeysOnly() bool {
	if m != nil {
		return m.KeysOnly
	}
	return false
}

func (m *RangeRequest) GetCountOnly() bool {
	if m != nil {
		return m.CountOnly
	}
	return false
}

func (m *RangeRequest) GetMinModRevision() int64 {
	if m != nil {
		return m.MinModRevision
	}
	return 0
}

func (m *RangeRequest) GetMaxModRevision() int64 {
	if m != nil {
		return m.MaxModRevision
	}
	return 0
}

func (m *RangeRequest) GetMinCreateRevision() int64 {
	if m != nil {
		return m.MinCreateRevision
	}
	return 0
}

func (m *RangeRequest) GetMaxCreateRevision() int64 {
	if m != nil {
		return m.MaxCreateRevision
	}
	return 0
}

type RangeResponse struct {
	//ResponseHeader header = 1;
	// kvs is the list of key-value pairs matched by the range request.
	// kvs is empty when count is requested.
	//repeated mvccpb.KeyValue kvs = 2;
	// more indicates if there are more keys to return in the requested range.
	More bool `protobuf:"varint,3,opt,name=more,proto3" json:"more,omitempty"`
	// count is set to the number of keys within the range when requested.
	Count                int64    `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RangeResponse) Reset()         { *m = RangeResponse{} }
func (m *RangeResponse) String() string { return proto.CompactTextString(m) }
func (*RangeResponse) ProtoMessage()    {}
func (*RangeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6edb5021125cded, []int{1}
}
func (m *RangeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeResponse.Unmarshal(m, b)
}
func (m *RangeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeResponse.Marshal(b, m, deterministic)
}
func (m *RangeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeResponse.Merge(m, src)
}
func (m *RangeResponse) XXX_Size() int {
	return xxx_messageInfo_RangeResponse.Size(m)
}
func (m *RangeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RangeResponse proto.InternalMessageInfo

func (m *RangeResponse) GetMore() bool {
	if m != nil {
		return m.More
	}
	return false
}

func (m *RangeResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterEnum("etcdserverpb.RangeRequest_SortOrder", RangeRequest_SortOrder_name, RangeRequest_SortOrder_value)
	proto.RegisterEnum("etcdserverpb.RangeRequest_SortTarget", RangeRequest_SortTarget_name, RangeRequest_SortTarget_value)
	proto.RegisterType((*RangeRequest)(nil), "etcdserverpb.RangeRequest")
	proto.RegisterType((*RangeResponse)(nil), "etcdserverpb.RangeResponse")
}

func init() { proto.RegisterFile("etcdserver/etcdserverpb/rpc.proto", fileDescriptor_f6edb5021125cded) }

var fileDescriptor_f6edb5021125cded = []byte{
	// 514 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xdf, 0x8a, 0xd3, 0x40,
	0x14, 0xc6, 0x37, 0xfd, 0xb3, 0x4d, 0x4e, 0xb3, 0x4b, 0x76, 0x14, 0x0c, 0x5d, 0x85, 0x1a, 0x14,
	0x8a, 0x17, 0x09, 0xec, 0x5e, 0xe9, 0x5d, 0x6d, 0x23, 0xc8, 0xba, 0x2d, 0x4c, 0xd7, 0xc2, 0x5e,
	0x85, 0x69, 0x33, 0x94, 0xa1, 0xc9, 0x4c, 0x9c, 0xcc, 0x96, 0xd6, 0x4b, 0xf1, 0x0d, 0x7c, 0x34,
	0x5f, 0xc1, 0x07, 0x91, 0x99, 0x74, 0xfb, 0x07, 0x15, 0xef, 0xce, 0xf9, 0xbe, 0x5f, 0xce, 0x4c,
	0xbe, 0x9c, 0xc0, 0x4b, 0xaa, 0xe6, 0x69, 0x49, 0xe5, 0x8a, 0xca, 0x68, 0x5f, 0x16, 0xb3, 0x48,
	0x16, 0xf3, 0xb0, 0x90, 0x42, 0x09, 0xe4, 0x1e, 0xea, 0x9d, 0xe7, 0x0b, 0x21, 0x16, 0x19, 0x8d,
	0x48, 0xc1, 0x22, 0xc2, 0xb9, 0x50, 0x44, 0x31, 0xc1, 0xcb, 0x8a, 0x0d, 0xbe, 0x37, 0xc1, 0xc5,
	0x84, 0x2f, 0x28, 0xa6, 0x5f, 0x1e, 0x68, 0xa9, 0x90, 0x07, 0xf5, 0x25, 0xdd, 0xf8, 0x56, 0xd7,
	0xea, 0xb9, 0x58, 0x97, 0xe8, 0x12, 0x1c, 0xa9, 0x89, 0x84, 0xf2, 0xd4, 0xaf, 0x19, 0xdd, 0x36,
	0x42, 0xcc, 0x53, 0xf4, 0x14, 0x9a, 0x19, 0xcb, 0x99, 0xf2, 0xeb, 0x5d, 0xab, 0x57, 0xc7, 0x55,
	0x83, 0x3a, 0x60, 0x4b, 0xba, 0x62, 0x25, 0x13, 0xdc, 0x6f, 0x18, 0x63, 0xd7, 0xa3, 0x01, 0x40,
	0x29, 0xa4, 0x4a, 0x84, 0x4c, 0xa9, 0xf4, 0x9b, 0x5d, 0xab, 0x77, 0x7e, 0xf5, 0x2a, 0x3c, 0xbc,
	0x72, 0x78, 0x78, 0xa1, 0x70, 0x22, 0xa4, 0x1a, 0x6b, 0x16, 0x3b, 0xe5, 0x63, 0x89, 0x3e, 0x40,
	0xdb, 0x0c, 0x51, 0x44, 0x2e, 0xa8, 0xf2, 0x4f, 0xcd, 0x94, 0xd7, 0xff, 0x99, 0x72, 0x67, 0x60,
	0x6c, 0x8e, 0xaf, 0x6a, 0x14, 0x80, 0x5b, 0x52, 0xc9, 0x48, 0xc6, 0xbe, 0x92, 0x59, 0x46, 0xfd,
	0x56, 0xd7, 0xea, 0xd9, 0xf8, 0x48, 0xd3, 0xef, 0xbf, 0xa4, 0x9b, 0x32, 0x11, 0x3c, 0xdb, 0xf8,
	0xb6, 0x01, 0x6c, 0x2d, 0x8c, 0x79, 0xb6, 0x41, 0x2f, 0x00, 0xe6, 0xe2, 0x81, 0xab, 0xca, 0x75,
	0x8c, 0xeb, 0x18, 0xc5, 0xd8, 0x3d, 0xf0, 0x72, 0xc6, 0x93, 0x5c, 0xa4, 0xc9, 0x2e, 0x10, 0x30,
	0x81, 0x9c, 0xe7, 0x8c, 0xdf, 0x8a, 0x14, 0x3f, 0xc6, 0xa2, 0x49, 0xb2, 0x3e, 0x26, 0xdb, 0x5b,
	0x92, 0xac, 0x0f, 0xc9, 0x10, 0x9e, 0xe8, 0x99, 0x73, 0x49, 0x89, 0xa2, 0x7b, 0xd8, 0x35, 0xf0,
	0x45, 0xce, 0xf8, 0xc0, 0x38, 0x47, 0x3c, 0x59, 0xff, 0xc1, 0x9f, 0x6d, 0x79, 0xb2, 0x3e, 0xe6,
	0x83, 0x10, 0x9c, 0x5d, 0xe6, 0xc8, 0x86, 0xc6, 0x68, 0x3c, 0x8a, 0xbd, 0x13, 0x04, 0x70, 0xda,
	0x9f, 0x0c, 0xe2, 0xd1, 0xd0, 0xb3, 0x50, 0x1b, 0x5a, 0xc3, 0xb8, 0x6a, 0x6a, 0xc1, 0x7b, 0x80,
	0x7d, 0xba, 0xa8, 0x05, 0xf5, 0x9b, 0xf8, 0xde, 0x3b, 0xd1, 0xcc, 0x34, 0xc6, 0x93, 0x8f, 0xe3,
	0x91, 0x67, 0xe9, 0x87, 0x07, 0x38, 0xee, 0xdf, 0xc5, 0x5e, 0x4d, 0x13, 0xb7, 0xe3, 0xa1, 0x57,
	0x47, 0x0e, 0x34, 0xa7, 0xfd, 0x4f, 0x9f, 0x63, 0xaf, 0x11, 0xbc, 0x85, 0xb3, 0xed, 0xe7, 0x2a,
	0x0b, 0xc1, 0x4b, 0x8a, 0x10, 0x34, 0x72, 0x21, 0xa9, 0x59, 0x2b, 0x1b, 0x9b, 0x5a, 0xef, 0x9a,
	0x49, 0x76, 0xbb, 0x52, 0x55, 0x73, 0x95, 0x40, 0xed, 0x66, 0x8a, 0xee, 0xa1, 0x69, 0x06, 0xa0,
	0xce, 0xbf, 0x97, 0xa0, 0x73, 0xf9, 0x57, 0xaf, 0x3a, 0x31, 0x78, 0xf6, 0xed, 0xe7, 0xaf, 0x1f,
	0xb5, 0x8b, 0xc0, 0x8d, 0x56, 0xd7, 0xd1, 0x72, 0x15, 0x99, 0x15, 0x7f, 0x67, 0xbd, 0x99, 0x9d,
	0x9a, 0x3f, 0xe5, 0xfa, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x9d, 0x49, 0xdc, 0x7a, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KVClient is the client API for KV service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KVClient interface {
	// Range gets the keys in the range from the key-value store.
	Range(ctx context.Context, in *RangeRequest, opts ...grpc.CallOption) (*RangeResponse, error)
}

type kVClient struct {
	cc *grpc.ClientConn
}

func NewKVClient(cc *grpc.ClientConn) KVClient {
	return &kVClient{cc}
}

func (c *kVClient) Range(ctx context.Context, in *RangeRequest, opts ...grpc.CallOption) (*RangeResponse, error) {
	out := new(RangeResponse)
	err := c.cc.Invoke(ctx, "/etcdserverpb.KV/Range", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KVServer is the server API for KV service.
type KVServer interface {
	// Range gets the keys in the range from the key-value store.
	Range(context.Context, *RangeRequest) (*RangeResponse, error)
}

// UnimplementedKVServer can be embedded to have forward compatible implementations.
type UnimplementedKVServer struct {
}

func (*UnimplementedKVServer) Range(ctx context.Context, req *RangeRequest) (*RangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Range not implemented")
}

func RegisterKVServer(s *grpc.Server, srv KVServer) {
	s.RegisterService(&_KV_serviceDesc, srv)
}

func _KV_Range_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).Range(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etcdserverpb.KV/Range",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).Range(ctx, req.(*RangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KV_serviceDesc = grpc.ServiceDesc{
	ServiceName: "etcdserverpb.KV",
	HandlerType: (*KVServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Range",
			Handler:    _KV_Range_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "etcdserver/etcdserverpb/rpc.proto",
}
